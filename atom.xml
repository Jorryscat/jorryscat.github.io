<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jorry&#39;s Blog</title>
  
  
  <link href="https://www.jorryscat.cn/atom.xml" rel="self"/>
  
  <link href="https://www.jorryscat.cn/"/>
  <updated>2024-10-06T18:19:34.988Z</updated>
  <id>https://www.jorryscat.cn/</id>
  
  <author>
    <name>Jorry</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>小程序落地项目的维护复盘</title>
    <link href="https://www.jorryscat.cn/2024/10/06/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%90%BD%E5%9C%B0%E9%A1%B9%E7%9B%AE%E7%9A%84%E7%BB%B4%E6%8A%A4%E5%A4%8D%E7%9B%98/"/>
    <id>https://www.jorryscat.cn/2024/10/06/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%90%BD%E5%9C%B0%E9%A1%B9%E7%9B%AE%E7%9A%84%E7%BB%B4%E6%8A%A4%E5%A4%8D%E7%9B%98/</id>
    <published>2024-10-06T15:07:09.000Z</published>
    <updated>2024-10-06T18:19:34.988Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>上学期末给甲方外包做了一个餐饮类小程序，本着锻炼实际开发能力的想法 ，完成了本次开发工作，直到上线以后，出现了一些或大或小的问题，现在就前端部分做简单复盘，防止以后重新踩坑。题外话，今天在git bash的时候发现hexo命令一直提醒not found，思考一会原来是node版本没有切回来，释然地笑了，还好没重装。</p></blockquote><p>本次记录的需要维护和优化的地方主要是两个，一个是优化加载卡顿问题（ios比较明显），一个是解决首次请求异常问题。</p><p>卡顿问题是小程序一套开发+杂七杂八的证书申请审核下来（实话说小程序开发最繁琐的是申请流程，占用整个开发周期大概将近1/4的比重）之后，在真机调试以及体验版本中发现的，并且直到上架发行之后甲方在使用体验记录中也曾多次提到卡顿这个问题。</p><p>是一个什么情况呢？</p><blockquote><p>甲方描述：太卡啦，加载半天看不到东西，一片空白，滑不下去……（ios特别明显）</p><p>开发回应：好的，收到，好的，收到。</p></blockquote><p><strong>代码逻辑和实际使用不是一回事，浏览器预览和真机调试不是一回事，样机和多型号设备不是一回事</strong>。非常pleasant (pressed) 的开发体验。</p><p>好的，于时着手分析卡的地方，第一个把图片尺寸太大这事拿出来解决，小程序货架一共接近70件商品，把尺寸大得天理不容的图片尽可能压缩了以便，速度果然提上来了。毕竟是小户型，不如饿了么美团这些大号豪庭户型，智能性还是不是特别可观的，自然不存在在小程序自动压缩的功能（<s>毕竟那么点启动资金不是</s>）[bitter smile]</p><p>第二个比较明显的是scoll-view组件存在的卡顿问题，取消了<code>scroll-with-animation</code>属性，开发者调试觉得美滋滋的动画这个时候也不能用了，用了就一个字：卡。</p><p>第二个是为ios增加了非常友好的一行css</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-webkit-<span class="attribute">overflow</span>-scrolling: touch;</span><br></pre></td></tr></table></figure><p>与此同时在pages.json中取消下拉刷新</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">enablePullDownRefresh<span class="string">&quot;:&quot;</span><span class="literal"><span class="keyword">true</span></span><span class="string">&quot;,</span></span><br></pre></td></tr></table></figure><p>解决的第三个方法是增加占位符，我是用的是骨架屏，自己定义了一个合适的骨架屏，在加载的时候显示，避免出现两秒的空白。</p><p>经过优化，小程序整个初始化流程下来速度提升了至少4倍。</p><p>我觉得罪魁祸首就是图片质量太高了，在保持图片可视和内存占用之间</p><p>只能折合选择合适的压缩程度，但是为了运行顺畅，建议单张图片占用内存不超过100k。</p><p>关于scrollview的性能问题，感觉吐槽的人也不少了，建议下次了解一下虚拟滚动列表（vue-virtual-scroller）。</p><p>二来是首次加载异常问题，这个在真机调试过程中都没发现，只是在上架后客户反映存在这样的 问题，但在测试的过程中很难捕捉到。考虑是网络不稳定导致的请求中断，此时正确的逻辑执行不了，就会导致加载失败，骨架屏无法正确隐藏。</p><p>思索再三，在找不到更好的解决方法之前，只能允许重复请求并设置请求次数检查。具体思路如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">onload</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">init</span>();  <span class="comment">//初始化函数</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">startPolling</span>();  <span class="comment">//检查函数</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="title function_">init</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> that = <span class="variable language_">this</span>;</span><br><span class="line">    that.<span class="property">isLoading</span> = <span class="literal">true</span>; <span class="comment">// 开始加载</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> configResult = <span class="keyword">await</span> that.$request(<span class="string">&#x27;/config&#x27;</span>, <span class="string">&#x27;get&#x27;</span>);</span><br><span class="line">        that.<span class="property">$store</span>.<span class="title function_">commit</span>(<span class="string">&#x27;set_app_properties&#x27;</span>, configResult.<span class="property">data</span>);</span><br><span class="line">        <span class="keyword">const</span> goodsResult = <span class="keyword">await</span> that.$request(<span class="string">&#x27;/goods/goodsMenu/list&#x27;</span>, <span class="string">&#x27;get&#x27;</span>);</span><br><span class="line">        that.<span class="property">goods</span> = goodsResult.<span class="property">data</span>;</span><br><span class="line">        that.<span class="property">currentCategoryName</span> = that.<span class="property">goods</span>[<span class="number">0</span>].<span class="property">goodsCategoryName</span>;</span><br><span class="line">        that.<span class="property">sizeCalcState</span> = <span class="literal">false</span>;</span><br><span class="line">        uni.<span class="title function_">stopPullDownRefresh</span>();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;获取数据失败:&#x27;</span>, error);</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        that.<span class="property">isLoading</span> = <span class="literal">false</span>; <span class="comment">// 确保在操作结束时设置为 false </span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">startPolling</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">timer</span> = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">goods</span>.<span class="property">length</span> &amp;&amp; <span class="variable language_">this</span>.<span class="property">retryCount</span> &lt; <span class="variable language_">this</span>.<span class="property">maxRetries</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">retryCount</span>++;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">init</span>(); <span class="comment">// 调用 init() 重试</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">retryCount</span> &gt;= <span class="variable language_">this</span>.<span class="property">maxRetries</span>) &#123;</span><br><span class="line">            <span class="built_in">clearInterval</span>(<span class="variable language_">this</span>.<span class="property">timer</span>); <span class="comment">// 达到最大重试次数，清除定时器</span></span><br><span class="line">            uni.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">                <span class="attr">title</span>: <span class="string">&#x27;加载失败，请检查网络或稍后重试&#x27;</span>,</span><br><span class="line">                <span class="attr">icon</span>: <span class="string">&#x27;none&#x27;</span>,</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="variable language_">this</span>.<span class="property">retryInterval</span>);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>记得在组件销毁的时候移除定时器避免内存泄漏。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">beforeDestroy</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 组件销毁时清理定时器</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">timer</span>) &#123;</span><br><span class="line">        <span class="built_in">clearInterval</span>(<span class="variable language_">this</span>.<span class="property">timer</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>目前先使用这个方法。后面有更好的尝试再去优化。虽然是一个商业项目，但是能从中发掘出一些解决问题的契机和方法，也是值得注意的。</p><p>小程序的界面还原我还是值得鼓励的：）maybe，147做的UI确实很好看，我感觉我还原的应该也还可以（一部分存在适配问题，但也是协调解决了，经典的font-weight有400和600就是没有中间的500，bitter smile again)，下面是一部分截图：</p><p><img src="https://pic.imgdb.cn/item/6702b6c8d29ded1a8c77740d.png" alt></p><p>就先写到这吧，感谢给力的UI和后端💖💖💖</p><p>time to sleep。</p><hr><p>今日推送：吴青峰&amp;旅行团  -《红色的河》</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="技术和方向" scheme="https://www.jorryscat.cn/categories/%E6%8A%80%E6%9C%AF%E5%92%8C%E6%96%B9%E5%90%91/"/>
    
    <category term="前端" scheme="https://www.jorryscat.cn/categories/%E6%8A%80%E6%9C%AF%E5%92%8C%E6%96%B9%E5%90%91/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="uniapp" scheme="https://www.jorryscat.cn/tags/uniapp/"/>
    
  </entry>
  
  <entry>
    <title>记录一次播放器魔改</title>
    <link href="https://www.jorryscat.cn/2024/07/29/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1%E6%92%AD%E6%94%BE%E5%99%A8%E9%AD%94%E6%94%B9/"/>
    <id>https://www.jorryscat.cn/2024/07/29/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1%E6%92%AD%E6%94%BE%E5%99%A8%E9%AD%94%E6%94%B9/</id>
    <published>2024-07-29T08:55:46.000Z</published>
    <updated>2024-09-14T13:52:40.527Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><blockquote><p>部署完博客后在思考整体的框架，以及如何添加一些合理的功能。<strong>Vivia</strong>这个主题深得我心，就是相比butterfly或者anzhiyu主题，可供选择的功能相对较少，不过确实给了我一些发挥的空间，比如一款可以在我的博客访问的音乐列表。</p></blockquote><p>刚好在安知鱼的博客上看到了比较满意的播放器效果，顺藤摸瓜找到了一些类似的项目，都是基于 <strong>Aplayer</strong> 以及 <strong>MetingJS</strong> 的二次开发。Aplayer 是一款效果不错的播放器插件，感兴趣的话可以到文档查阅。目前在文章中插入使用的是对hexo框架更为友好的 <strong>hexo-tag-aplayer</strong> ，非常好上手，链接：<a href="https://easyhexo.com/3-Plugins-use-and-config/3-1-hexo-tag-aplayer/">hexo-tag-aplayer | Easy Hexo 👨‍💻</a></p><hr><p>对于网页播放器，我是在这位 <a href="https://blog.zhheo.com/">张洪Heo - 分享设计与科技生活 (zhheo.com)</a> 大佬的项目上小改的。</p><p>GitHub：<a href="https://github.com/zhheo/HeoMusic/">zhheo/HeoMusic: 一个基于Aplayer和MetingJS的静态音乐播放器 (github.com)</a>。</p><p>修改后的版本长这样：</p><img src="/2024/07/29/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1%E6%92%AD%E6%94%BE%E5%99%A8%E9%AD%94%E6%94%B9/result.png" alt="修改后的效果"><p>vivia 是通过md文档渲染的网页，所以在md文件中操作是不太可行的，可以在hexo中新增一个自定义网页，以满足开发需求。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> page <span class="string">&quot;music&quot;</span></span><br></pre></td></tr></table></figure><p>这样在 <code>/source</code> 下会生成 <code>/music</code>文件夹，默认状态下该文件夹下有一个 index.html 以及一个用于存放静态资源的文件夹。</p><p>同时为了避免hexo对新建的文件进行渲染，还需要在博客根目录的 <code>_config.yml</code> 文件中修改一下项目配置，找到 <code>skip_render</code> 选项并设置需要跳过渲染的文件或文件夹。方便起见，我设置了music文件夹下的所有文件都跳过渲染。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">skip_render:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">./music/**</span></span><br></pre></td></tr></table></figure><p>这样，就能通过博客根站点 + 相对source的路径访问到你的新网页了，比如 <code>https://jorryscat.cn/music</code> 。如果你想把该网页添加到导航栏的话，还需要在对应主题下的配置文件中进行配置。对于vivia主题，我的配置为：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span> <span class="comment"># Links in the navigation bar</span></span><br><span class="line">  <span class="attr">Home:</span> <span class="string">/</span></span><br><span class="line">  <span class="attr">Archives:</span> <span class="string">/archives</span></span><br><span class="line">  <span class="attr">Music:</span> <span class="string">/music</span></span><br><span class="line">  <span class="attr">About:</span> <span class="string">/about</span></span><br><span class="line"><span class="attr">rss:</span> <span class="string">/atom.xml</span></span><br></pre></td></tr></table></figure><p>建好之后，就可以开心魔改你的 player 了🤌​。</p><p>首先拉取一下大佬贡献的初始代码，并且把它们整到我的music文件夹中，观察之后发现魔改可以从两个方面入手，一个是给出的样本网页 <code>index.html</code> ，一个是大大提供的 <code>main.css</code> ，粗略阅读一下代码后基本可以确定代码的结构：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- 处理播放器背景</span><br><span class="line">- 处理歌单列表</span><br><span class="line">- 处理播放器</span><br><span class="line">- 处理控制器</span><br></pre></td></tr></table></figure><p>按照需要进行修改就可以了，项目本身做得很好看，无奈我是小号字体爱好者，所以改的部分主要是歌词展示以及播放器效果，同时为了适配我的网站，增加了一个顶部导航栏并且做了同样的样式。因为这个index刚开始就是从生成的 <code>/public/music/index.html</code> 中拿过来用的，所以发生了一些比较 <s>抓马</s> 的事情，生成的网页在本地访问一切正常，但是上传并通过vercel部署的时候所有样式都丢了。后面解决方法是把原来对 aplayer 的相关引用都改到 source 的相对路径下，部署后能成功访问。（ 后面我思考可能是我一开始拿 index 的时候里面本身引入了 vivia的样式和逻辑😐）</p><p>修改的时候可以开一下本地访问，在博客根目录右键 <code>git bash here</code> 分别输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>本地服务器查看修改的效果，运行 <code>hexo g</code> 以及<code>hexo d</code> 上传到 github并且部署就🆗了。</p><p>播放器改完后还是有一些bug，比如自转动画的问题（主要出在对 aplayer 的监听，可能是当时搞的时候急着睡觉所以抓耳挠腮有点浮躁，先放着吧，到时候再来解决）。</p><p>先这样😪，我又该睡觉了。</p><p>感谢各位大佬开源项目的无私贡献 ~</p><p><a href="https://github.com/anzhiyu-c">@anzhiyu</a> , <a href="https://github.com/zhheo">@张洪Heo</a> , <a href="https://github.com/Glowed">@Glowed</a></p><hr><p>更新，已解决。</p><p>访问地址： <a href="/music/">魔改播放器</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="技术和方向" scheme="https://www.jorryscat.cn/categories/%E6%8A%80%E6%9C%AF%E5%92%8C%E6%96%B9%E5%90%91/"/>
    
    <category term="前端" scheme="https://www.jorryscat.cn/categories/%E6%8A%80%E6%9C%AF%E5%92%8C%E6%96%B9%E5%90%91/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="MetingJS" scheme="https://www.jorryscat.cn/tags/MetingJS/"/>
    
    <category term="魔改" scheme="https://www.jorryscat.cn/tags/%E9%AD%94%E6%94%B9/"/>
    
    <category term="CSS" scheme="https://www.jorryscat.cn/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>我的循环歌单</title>
    <link href="https://www.jorryscat.cn/2024/07/26/%E6%88%91%E7%9A%84%E5%BE%AA%E7%8E%AF%E6%AD%8C%E5%8D%95/"/>
    <id>https://www.jorryscat.cn/2024/07/26/%E6%88%91%E7%9A%84%E5%BE%AA%E7%8E%AF%E6%AD%8C%E5%8D%95/</id>
    <published>2024-07-26T11:13:47.000Z</published>
    <updated>2024-09-11T18:34:07.746Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><em>( 封面图片来自网络)</em></p><blockquote><p>微社恐的INFJ平常出门都是耳机不离身的，久而久之音乐变成了自我探索的一种重要的载体。在这里向大家介绍一些一直活跃在歌单里的歌，是它们建起了独此一份的乌托邦。</p></blockquote><p>实话说吴青峰的歌质量都很高，（可能有点偏心，但是把青峰鸽鸽单独从绿团中拎出来，他的很多歌都很莫名地契合我的胃口）。有时候听他的歌，会失神游走，“生命的本质是孤独的，爱却能创造无比深刻的羁绊。” 生命从最初到最终其实都一直是个体化的过程，这个过程能够让自己变得温柔且有力量是一件需要去探索和享受的事情。</p><p>吴青峰是很有灵性的创作人，不止于一个歌手，有时候讲起吴青峰的歌，感觉已经超过了一些人所认识的《小情歌》，他的歌总有一种灵魂漫游的感觉。</p><p>最喜欢的是 <strong>【册叶一：一与一】</strong> 这张，收录了很多吴青峰作为词曲创作者的歌曲，并由他自己翻唱，集结成册，像是一本回忆之书，那些散落、飞扬他处的漂浮之叶，一一拾回，歌之以欢悲。</p><p>专辑是VIP，可以到网易云音乐或者酷狗音乐收听。</p><hr><p>再者是陈老师的歌，认识恨晚的感觉。陈绮贞的歌给我补充了青春时期错过的种种悸动、遗憾、以及未曾经历的美好。</p><p>“如果有一个怀抱勇敢不计代价，别让我飞，将我温柔豢养。”</p><p>lala的歌和sandy的歌，都喜欢……随机分别挑出来一首，都是芭乐的神✌。</p><hr><p>anyway，如果你有喜欢的歌安利，欢迎留下评论 ~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="生活碎片" scheme="https://www.jorryscat.cn/categories/%E7%94%9F%E6%B4%BB%E7%A2%8E%E7%89%87/"/>
    
    <category term="音乐" scheme="https://www.jorryscat.cn/categories/%E7%94%9F%E6%B4%BB%E7%A2%8E%E7%89%87/%E9%9F%B3%E4%B9%90/"/>
    
    
    <category term="吴青峰" scheme="https://www.jorryscat.cn/tags/%E5%90%B4%E9%9D%92%E5%B3%B0/"/>
    
  </entry>
  
</feed>
